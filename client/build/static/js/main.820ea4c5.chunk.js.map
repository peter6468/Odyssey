{"version":3,"sources":["components/commom/tableHeader.jsx","components/commom/tableBody.jsx","components/commom/table.jsx","components/commom/like.jsx","components/stocksTable.jsx","components/commom/listGroup.jsx","components/commom/pagination.jsx","services/logService.js","services/httpService.js","services/sectorService.js","components/searchBox.js","services/stockUtil.js","components/stocks.jsx","utils/paginate.js","components/commom/input.jsx","components/commom/select.jsx","components/commom/form.jsx","components/stockForm.jsx","components/news.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/loginForm.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","props","order","onSort","renderSortIcon","column","react_default","a","createElement","className","_this2","this","columns","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","_this$props","data","Table","_ref","tableHeader","tableBody","Like","classes","liked","style","cursor","aria-hidden","StocksTable","stock","like","onLike","onDelete","stocks","table","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","logService","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","httpService","post","put","delete","getSectors","http","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","stockUtil","query","Stocks","state","sectors","searchQury","selectedSector","handleDelete","_callee","originalStocks","regenerator_default","wrap","_context","prev","next","filter","m","setState","t0","stop","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleSectorSelect","genre","selectedGenre","handleSearch","searchQuery","handleSort","getPagedData","_this$state","allStocks","filtered","title","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","getStocks","stockUtils","then","res","_this$getPagedData","_this$state2","listGroup","Link","to","marginButtom","searchBox","handlesearch","stocksTable","pagination","Input","rest","objectWithoutProperties","htmlFor","assign","id","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","commom_select","arguments","commom_input","StockForm","genreId","numberInStock","dailyRentalRate","genres","string","required","number","min","max","saveStock","history","push","stockId","match","params","getStock","mapToViewModel","_context3","replace","populateSectors","populateStock","onSubmit","renderInput","renderSelect","renderButton","News","Rentals","notFound","NavBar","class","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","LoginForm","username","password","RegistrationForm","email","userService","reponse","App","Fragment","lib","navBar","Switch","Route","component","RegisterForm","NotFound","Redirect","from","exact","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4XA6CeA,6MAtCXC,UAAY,SAAAC,GACR,IAAMC,EAAUC,OAAAC,EAAA,EAAAD,CAAA,GAAQE,EAAKC,MAAMJ,YAC3BA,EAAWD,OAASA,EACpBC,EAAWK,MAA6B,QAArBL,EAAWK,MAAkB,OAAQ,OAExDL,EAAWD,KAAOA,EAClBC,EAAWK,MAAQ,OAEvBF,EAAKC,MAAME,OAAON,MAG1BO,eAAiB,SAAAC,GAAU,IACfR,EAAeG,EAAKC,MAApBJ,WAER,OAAIQ,EAAOT,OAASC,EAAWD,KAAa,KACnB,QAArBC,EAAWK,MAAwBI,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAC7CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6FAGf,IAAAC,EAAAC,KACL,OACAL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACKG,KAAKV,MAAMW,QAAQC,IAAI,SAAAR,GAAM,OAC1BC,EAAAC,EAAAC,cAAA,MACAC,UAAU,YACVK,IAAKT,EAAOT,MAAQS,EAAOS,IAC3BC,QAAS,kBAAML,EAAKf,UAAUU,EAAOT,QAEpCS,EAAOW,MALR,IAKgBN,EAAKN,eAAeC,eA9B9BY,8BC6BXC,6MA/BXC,WAAY,SAACC,EAAMf,GACf,OAAIA,EAAOgB,QAAgBhB,EAAOgB,QAAQD,GAEnCE,IAAEC,IAAIH,EAAMf,EAAOT,SAG9B4B,UAAW,SAACJ,EAAMf,GACd,OAAOe,EAAKK,KAAOpB,EAAOT,MAAQS,EAAOS,8EAIpC,IAAAJ,EAAAC,KAAAe,EAEkBf,KAAKV,MAArB0B,EAFFD,EAEEC,KAAMf,EAFRc,EAEQd,QAEb,OACIN,EAAAC,EAAAC,cAAA,aACKmB,EAAKd,IAAI,SAAAO,GAAI,OACVd,EAAAC,EAAAC,cAAA,MAAIM,IAAKM,EAAKK,KACTb,EAAQC,IAAI,SAAAR,GAAM,OACnBC,EAAAC,EAAAC,cAAA,MAAIM,IAAKJ,EAAKc,UAAUJ,EAAMf,IAC1BK,EAAKS,WAAWC,EAAMf,iBAtB1BY,aCeTW,EAdD,SAAAC,GAA0C,IAAvCjB,EAAuCiB,EAAvCjB,QAASf,EAA8BgC,EAA9BhC,WAAYM,EAAkB0B,EAAlB1B,OAAQwB,EAAUE,EAAVF,KAE1C,OACArB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAACsB,EAAD,CACIlB,QAASA,EACTf,WAAYA,EACZM,OAAQA,IAEhBG,EAAAC,EAAAC,cAACuB,EAAD,CAAWnB,QAASA,EAASe,KAAMA,MCaxBK,EArBD,SAAC/B,GACX,IAAIgC,EAAU,cAOd,OANKhC,EAAMiC,QAAOD,GAAW,MAOrB3B,EAAAC,EAAAC,cAAA,KACAO,QAASd,EAAMc,QACfoB,MAAO,CAACC,OAAQ,WAChB3B,UAAWwB,EACXI,cAAY,UCsCRC,6MAlDZ1B,QAAU,CACN,CACIhB,KAAM,OACNoB,MAAO,QAGX,CAACpB,KAAM,SAAUoB,MAAO,UACxB,CAACpB,KAAM,QAASoB,MAAO,SACvB,CAACpB,KAAM,WAAcoB,MAAO,YAC5B,CAACpB,KAAM,WAAcoB,MAAO,YAC5B,CAACpB,KAAM,UAAaoB,MAAO,WAC3B,CAACpB,KAAM,UAAaoB,MAAO,eAC3B,CACIF,IAAM,OACNO,QAAS,SAAAkB,GAAK,OAGVjC,EAAAC,EAAAC,cAACgC,EAAD,CAAMN,MAAOK,EAAML,MAAOnB,QAAS,kBAAMf,EAAKC,MAAMwC,OAAOF,QAEnE,CACIzB,IAAK,SACLO,QAAS,SAAAkB,GAAK,OACVjC,EAAAC,EAAAC,cAAA,UACIO,QAAS,kBAAMf,EAAKC,MAAMyC,SAASH,IACnC9B,UAAU,yBAFd,qFAaH,IAAAiB,EACkCf,KAAKV,MAApC0C,EADHjB,EACGiB,OAAQxC,EADXuB,EACWvB,OAAQN,EADnB6B,EACmB7B,WAExB,OACIS,EAAAC,EAAAC,cAACoC,EAAD,CACAhC,QAASD,KAAKC,QACde,KAAMgB,EACN9C,WAAYA,EACZM,OAAQA,WA5CMc,aCHpB4B,EAAY,SAAAhB,GAMZ,IALFiB,EAKEjB,EALFiB,MACAC,EAIElB,EAJFkB,aACAC,EAGEnB,EAHFmB,cACAC,EAEEpB,EAFFoB,aACAC,EACErB,EADFqB,aAGA,OACI5C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTqC,EAAMjC,IAAI,SAAAO,GAAI,OACXd,EAAAC,EAAAC,cAAA,MACIO,QAAS,kBAAMmC,EAAa9B,IAC5BN,IAAKM,EAAK4B,GAGVvC,UACIW,IAAS6B,EAAe,yBAA2B,mBAG1D7B,EAAK2B,QAOtBF,EAAUM,aAAe,CACrBJ,aAAc,OACdC,cAAe,OAKJH,QCGAO,EA/BI,SAAAvB,GAAyD,IAAtDwB,EAAsDxB,EAAtDwB,WAAYC,EAA0CzB,EAA1CyB,SAAUC,EAAgC1B,EAAhC0B,YAAaC,EAAmB3B,EAAnB2B,aAG/CC,EAAaC,KAAKC,KAAKN,EAAaC,GAE1C,GAAqB,IAAjBG,EAAoB,OAAO,KAC/B,IAAMG,EAAQtC,IAAEuC,MAAM,EAAGJ,EAAa,GAGtC,OACAnD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTmD,EAAM/C,IAAI,SAAAiD,GAAI,OACXxD,EAAAC,EAAAC,cAAA,MAAIM,IAAKgD,EAAMrD,UAAaqD,IAASP,EAAc,mBAAqB,aACpEjD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,YAAYM,QAAS,kBAAMyC,EAAaM,KACpDA,kCCZN,IAAAC,EAAA,CACXC,KAVJ,aAWIC,IAPJ,SAAaC,GAETC,QAAQD,MAAMA,KCHlBE,IAAMC,aAAaC,SAASC,IAAI,KAAM,SAAAL,GAUhC,OARAA,EAAMI,UACNJ,EAAMI,SAASE,QAAU,KACzBN,EAAMI,SAASE,OAAS,MAG1BC,EAAOR,IAAIC,GACXQ,QAAMR,MAAM,kCAEHS,QAAQC,OAAOV,KAMX,IAAAW,EAAA,CACXtD,IAAK6C,IAAM7C,IACXuD,KAAMV,IAAMU,KACZC,IAAKX,IAAMU,KACXE,OAAQZ,IAAMY,QCtBb,SAASC,IAEZ,OAAOC,EAAK3D,IAAI,YCHpB,IAae4D,EAbG,SAAAtD,GAAyB,IAAtBuD,EAAsBvD,EAAtBuD,MAAOC,EAAexD,EAAfwD,SAC1B,OACE/E,EAAAC,EAAAC,cAAA,SACE8E,KAAK,OACLC,KAAK,QACL9E,UAAU,oBACV+E,YAAY,YACZJ,MAAOA,EACPC,SAAU,SAAAI,GAAC,OAAIJ,EAASI,EAAEC,cAAcN,WCR/BO,EAEH,SAAAC,GAAS,OAAOxB,IAAM7C,IAAI,gBC6KvBsE,6MAjKXC,MAAQ,CACJnD,OAAQ,GACRoD,QAAS,GACTxC,YAAa,EACbD,SAAU,GACV0C,WAAY,GACZC,eAAgB,KAChBpG,WAAY,CAAED,KAAM,QAASM,MAAO,UAqBvCgG,mDAAe,SAAAC,EAAM5D,GAAN,IAAA6D,EAAAzD,EAAA,OAAA0D,EAAA9F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACLL,EAAiBpG,EAAK8F,MAAMnD,OAC5BA,EAASyD,EAAeM,OAAO,SAAAC,GAAC,OAAGA,EAAElF,MAAQc,EAAMd,MACzDzB,EAAK4G,SAAS,CAAEjE,WAHL4D,EAAAC,KAAA,EAAAD,EAAAE,KAAA,SAMElE,EAAMd,IANR,OAAA8E,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SASHA,EAAAM,GAAGvC,UAAmC,MAAvBiC,EAAAM,GAAGvC,SAASE,QAC5BE,QAAMR,MAAM,uCAEZlE,EAAK4G,SAAS,CAACjE,OAAQyD,IAZnB,yBAAAG,EAAAO,SAAAX,EAAAxF,KAAA,oEAgBfoG,WAAa,SAAAxE,GAIV,IAAMI,EAAM7C,OAAAkH,EAAA,EAAAlH,CAAOE,EAAK8F,MAAMnD,QAIxBsE,EAAQtE,EAAOuE,QAAQ3E,GAG7BI,EAAOsE,GAAPnH,OAAAC,EAAA,EAAAD,CAAA,GAAoB6C,EAAOsE,IAE3BtE,EAAOsE,GAAO/E,OAAQS,EAAOsE,GAAO/E,MAEpClC,EAAK4G,SAAS,CAAEjE,cAInBwE,iBAAmB,SAAArD,GACf9D,EAAK4G,SAAS,CAAErD,YAAaO,OAIjCsD,mBAAqB,SAAAC,GACjBrH,EAAK4G,SAAS,CAAEU,cAAeD,EAAO9D,YAAa,OAGvDgE,aAAe,SAAA3B,GACX5F,EAAK4G,SAAS,CAAEY,YAAa5B,EAAO0B,cAAe,KAAM/D,YAAa,OAG1EkE,WAAa,SAAA5H,GACVG,EAAK4G,SAAU,CAAE/G,kBAGrB6H,aAAc,WAAM,IAAAC,EAQb3H,EAAK8F,MANJxC,EAFYqE,EAEZrE,SACAC,EAHYoE,EAGZpE,YACA1D,EAJY8H,EAIZ9H,WACAyH,EALYK,EAKZL,cACAE,EANYG,EAMZH,YACQI,EAPID,EAOZhF,OASAkF,EAAWD,EACXJ,EACFK,EAAWD,EAAUlB,OAAO,SAAAC,GAAC,OAC3BA,EAAEmB,MAAMC,cAAcC,WAAWR,EAAYO,iBAExCT,GAAiBA,EAAc7F,MACtCoG,EAAWD,EAAUlB,OAAO,SAAAC,GAAC,OAAIA,EAAEU,MAAM5F,MAAQ6F,EAAc7F,OAEjE,IAEMkB,ECxHP,SAAkBG,EAAOmF,EAAY3E,GACxC,IAAM4E,GAAcD,EAAY,GAAK3E,EACrC,OAAOhC,IAAEwB,GACJqF,MAAMD,GACNE,KAAK9E,GACL8B,QDmHciD,CAFA/G,IAAEgH,QAAQT,EAAU,CAAChI,EAAWD,MAAO,CAACC,EAAWK,QAElCqD,EAAaD,GAE7C,MAAO,CAAEiF,WAAYV,EAASW,OAAQ7G,KAAMgB,6NAjGtBsC,2BAAdtD,SACDoE,GAAU,CAAEtE,IAAK,GAAI8D,KAAM,mCAAmB5D,eAEtB8G,sCAAhB9F,IAANhB,KACRhB,KAAKiG,SAAS,CAAEjE,SAAQoD,4JAKP,IAAArF,EAAAC,KACjB+H,IAAoBC,KAAK,SAAAC,GACrBzE,QAAQF,IAAI2E,GACZlI,EAAKkG,SAAS,CAACjE,OAAQiG,EAAIjH,0CA6FhC,GAAc,IAHWhB,KAAKmF,MAAMnD,OAA5B6F,OAGS,OAAOlI,EAAAC,EAAAC,cAAA,iDALnB,IAAAqI,EAOgClI,KAAK+G,eAAlCa,EAPHM,EAOGN,WAAkB5F,EAPrBkG,EAOelH,KAPfmH,EAQsDnI,KAAKmF,MAAxDxC,EARHwF,EAQGxF,SAAUC,EARbuF,EAQavF,YAAa1D,EAR1BiJ,EAQ0BjJ,WAAY2H,EARtCsB,EAQsCtB,YAEvC,OACAlH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACdH,EAAAC,EAAAC,cAACuI,EAAD,CACGjG,MAAOnC,KAAKmF,MAAMC,QAClB9C,aAActC,KAAKmF,MAAMG,eACzB/C,aAAcvC,KAAKyG,sBAGvB9G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CACIC,GAAG,cACHxI,UAAU,kBACV0B,MAAO,CAAE+G,aAAc,KAH3B,aAOJ5I,EAAAC,EAAAC,cAAA,oBAAY+H,EAAZ,4BAEAjI,EAAAC,EAAAC,cAAC2I,EAAD,CAAW/D,MAAOoC,EAAanC,SAAU1E,KAAKyI,eAC9C9I,EAAAC,EAAAC,cAAC6I,EAAD,CACI1G,OAAQA,EACR9C,WAAYA,EACZ4C,OAAQ9B,KAAKoG,WACbrE,SAAU/B,KAAKuF,aACf/F,OAAQQ,KAAK8G,aAEjBnH,EAAAC,EAAAC,cAAC8I,EAAD,CACIjG,WAAYkF,EACZjF,SAAUA,EACVC,YAAaA,EACbC,aAAc7C,KAAKwG,4BAzJlBlG,6CEHNsI,EAVD,SAAA1H,GAAqC,IAAlC0D,EAAkC1D,EAAlC0D,KAAMvE,EAA4Ba,EAA5Bb,MAAOkD,EAAqBrC,EAArBqC,MAAUsF,EAAW1J,OAAA2J,EAAA,EAAA3J,CAAA+B,EAAA,0BACjD,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOkJ,QAASnE,GAAOvE,GACvBV,EAAAC,EAAAC,cAAA,QAAAV,OAAA6J,OAAA,GAAWH,EAAX,CAAiBjE,KAAMA,EAAMqE,GAAIrE,EAAM9E,UAAU,kBAChDyD,GAAS5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsByD,KCYtC2F,EAjBA,SAAAhI,GAA8C,IAA3C0D,EAA2C1D,EAA3C0D,KAAMvE,EAAqCa,EAArCb,MAAO8I,EAA8BjI,EAA9BiI,QAAS5F,EAAqBrC,EAArBqC,MAAUsF,EAAW1J,OAAA2J,EAAA,EAAA3J,CAAA+B,EAAA,oCAC3D,OACEvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOkJ,QAASnE,GAAOvE,GACvBV,EAAAC,EAAAC,cAAA,SAAAV,OAAA6J,OAAA,CAAQpE,KAAMA,EAAMqE,GAAIrE,GAAUiE,EAAlC,CAAwC/I,UAAU,iBAChDH,EAAAC,EAAAC,cAAA,UAAQ4E,MAAM,KACb0E,EAAQjJ,IAAI,SAAAkJ,GAAM,OACjBzJ,EAAAC,EAAAC,cAAA,UAAQM,IAAKiJ,EAAOtI,IAAK2D,MAAO2E,EAAOtI,KACpCsI,EAAOxE,SAIbrB,GAAS5D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsByD,KC8FtC8F,6MArGXlE,MAAQ,CACJnE,KAAM,GACNsI,OAAQ,MAGXC,SAAW,WACR,IAEOhG,EAASiG,IAAID,SAASlK,EAAK8F,MAAMnE,KAAM3B,EAAKoK,OAFnC,CAAEC,YAAY,IAEvBnG,MACP,IAAKA,EAAO,OAAO,KAEnB,IAAM+F,EAAS,GANDK,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAQd,QAAAC,EAAAC,EAAiBzG,EAAM0G,QAAvBC,OAAAC,cAAAR,GAAAI,EAAAC,EAAAlE,QAAAsE,MAAAT,GAAA,OAASlJ,EAATsJ,EAAAtF,MACI6E,EAAO7I,EAAKxB,KAAK,IAAMwB,EAAK4J,SATlB,MAAAC,GAAAV,GAAA,EAAAC,EAAAS,EAAA,YAAAX,GAAA,MAAAK,EAAAO,QAAAP,EAAAO,SAAA,WAAAX,EAAA,MAAAC,GAUd,OAAOP,KAGXkB,iBAAmB,SAAAtJ,GAAqB,IAAlB0D,EAAkB1D,EAAlB0D,KAAMH,EAAYvD,EAAZuD,MAGlBgG,EAAGtL,OAAAuL,EAAA,EAAAvL,CAAA,GAAMyF,EAAOH,GAChBgF,EAAMtK,OAAAuL,EAAA,EAAAvL,CAAA,GAAMyF,EAAOvF,EAAKoK,OAAO7E,IAC9BrB,EAASiG,IAAID,SAASkB,EAAKhB,GAA3BlG,MACP,OAAOA,EAAQA,EAAM0G,QAAQ,GAAGI,QAAU,QAK9CM,aAAgB,SAAA7F,GACZA,EAAE8F,iBAEF,IAAMtB,EAASjK,EAAKkK,WAIpB/F,QAAQF,IAAIgG,GACZjK,EAAK4G,SAAS,CAAEqD,OAAQA,GAAU,KAC9BA,GAEJjK,EAAKwL,cAGTC,aAAe,SAAAC,GAA8B,IAAZC,EAAYD,EAA3BhG,cAERuE,EAAMnK,OAAAC,EAAA,EAAAD,CAAA,GAAOE,EAAK8F,MAAMmE,QACxB2B,EAAc5L,EAAKmL,iBAAiBQ,GACtCC,EAAc3B,EAAO0B,EAAMpG,MAAQqG,SAC3B3B,EAAO0B,EAAMpG,MAEzB,IAAM5D,EAAI7B,OAAAC,EAAA,EAAAD,CAAA,GAAME,EAAK8F,MAAMnE,MAG3BA,EAAKgK,EAAMpG,MAAOoG,EAAMvG,MACxBpF,EAAK4G,SAAS,CAAEjF,OAAMsI,wFAGbjJ,GACT,OACIV,EAAAC,EAAAC,cAAA,UACIqL,SAAUlL,KAAKuJ,WACfzJ,UAAU,mBACLO,wCAKJuE,EAAMvE,EAAO8I,GAAS,IAAAnC,EACNhH,KAAKmF,MAAtBnE,EADuBgG,EACvBhG,KAAMsI,EADiBtC,EACjBsC,OAEd,OACE3J,EAAAC,EAAAC,cAACsL,EAAD,CACEvG,KAAMA,EACNH,MAAOzD,EAAK4D,GACZvE,MAAOA,EACP8I,QAASA,EACTzE,SAAU1E,KAAK8K,aACfvH,MAAO+F,EAAO1E,yCAKVA,EAAMvE,GAAsB,IAAfsE,EAAeyG,UAAAvD,OAAA,QAAAiC,IAAAsB,UAAA,GAAAA,UAAA,GAAR,OAAQjD,EAEZnI,KAAKmF,MAArBnE,EAF4BmH,EAE5BnH,KAAMsI,EAFsBnB,EAEtBmB,OAEb,OACE3J,EAAAC,EAAAC,cAACwL,EAAD,CACK1G,KAAMA,EACNC,KAAMA,EACNH,MAAOzD,EAAK4D,GACZvE,MAAOA,EACPqE,SAAU1E,KAAK8K,aAEfvH,MAAO+F,EAAO1E,YA/FXtE,aCyFJgL,6MAvFXnG,MAAQ,CACJnE,KAAM,CACFmG,MAAO,GACPoE,QAAS,GACTC,cAAe,GACfC,gBAAiB,IAErBC,OAAQ,GACRpC,OAAQ,MAGZG,OAAS,CACL3I,IAAK0I,IAAImC,SACTxE,MAAOqC,IAAImC,SACNC,WACAvL,MAAM,SACXkL,QAAS/B,IAAImC,SACRC,WACAvL,MAAM,SACXmL,cAAehC,IAAIqC,SACdD,WACAE,IAAI,GACJC,IAAI,KACJ1L,MAAM,mBACXoL,gBAAiBjC,IAAIqC,SAChBD,WACAE,IAAI,GACJC,IAAI,GACJ1L,MAAM,wBAmCfwK,8BAAW,SAAArF,IAAA,OAAAE,EAAA9F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDkG,oBAAU3M,EAAK8F,MAAMnE,MADpB,OAGP3B,EAAKC,MAAM2M,QAAQC,KAAK,WAHjB,wBAAAtG,EAAAO,SAAAX,EAAAxF,4MA/BoBsE,IAAbc,IAAPpE,KACPhB,KAAKiG,SAAS,CAAEb,oRAMI,SADV+G,EAAUnM,KAAKV,MAAM8M,MAAMC,OAAOpD,qEAGZqD,mBAASH,mBAAxBvK,IAANZ,KACPhB,KAAKiG,SAAS,CAAEjF,KAAMhB,KAAKuM,eAAe3K,uDAEtC4K,EAAAtG,GAAGvC,UAAmC,MAAvB6I,EAAAtG,GAAGvC,SAASE,QAC3B7D,KAAKV,MAAM2M,QAAQQ,QAAQ,8RAI7BzM,KAAK0M,yCACL1M,KAAK2M,yJAGA/K,GACX,MAAM,CACFd,IAAKc,EAAMd,IACXqG,MAAOvF,EAAMuF,MACboE,QAAS3J,EAAM8E,MAAM5F,IACrB0K,cAAe5J,EAAM4J,cACrBC,gBAAiB7J,EAAM6J,kDAY/B,OACE9L,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,QAAM+M,SAAU5M,KAAK2K,cAClB3K,KAAK6M,YAAY,QAAS,SAC1B7M,KAAK8M,aAAa,UAAW,QAAS9M,KAAKmF,MAAMuG,QACjD1L,KAAK6M,YAAY,gBAAiB,kBAAmB,UACrD7M,KAAK6M,YAAY,kBAAmB,QACpC7M,KAAK+M,aAAa,iBAhFJ1D,GCDR2D,EAJF,WACT,OAAOrN,EAAAC,EAAAC,cAAA,mBCGEoN,EAJC,WACZ,OAAOtN,EAAAC,EAAAC,cAAA,sBCGIqN,EAJE,WACb,OAAOvN,EAAAC,EAAAC,cAAA,+BCwCIsN,GAxCA,WACb,OACExN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iDACbH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAM+E,MAAM,eAAe9E,GAAG,KAA9B,QAGA3I,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACV6E,KAAK,SACL0I,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdC,aAAW,qBAEX9N,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BmJ,GAAG,sBAC3CtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAS5N,UAAU,oBAAoBwI,GAAG,WAA1C,UACS3I,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAhB,cAETH,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAS5N,UAAU,oBAAoBwI,GAAG,SAA1C,QAGA3I,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAS5N,UAAU,oBAAoBwI,GAAG,YAA1C,WAGA3I,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAS5N,UAAU,oBAAoBwI,GAAG,UAA1C,SAGA3I,EAAAC,EAAAC,cAAC6N,EAAA,EAAD,CAAS5N,UAAU,oBAAoBwI,GAAG,aAA1C,gBCOKqF,8MAjCXxI,MAAQ,CACJnE,KAAM,CAAE4M,SAAU,GAAIC,SAAU,IAChCvE,OAAQ,MAGZG,OAAS,CACLmE,SAAUpE,IAAImC,SACTC,WACAvL,MAAM,YACXwN,SAAUrE,IAAImC,SACTC,WACAvL,MAAM,eAGfwK,SAAW,WAEPrH,QAAQF,IAAI,sFAIZ,OACA3D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAM+M,SAAU5M,KAAK2K,cAChB3K,KAAK6M,YAAY,WAAY,YAC7B7M,KAAK6M,YAAY,WAAY,WAAY,YACzC7M,KAAK+M,aAAa,kBA3BX1D,YCgDTyE,8MAjDX3I,MAAQ,CACJnE,KAAM,CAAE4M,SAAU,GAAIC,SAAU,IAChCvE,OAAQ,MAGZG,OAAS,CACLmE,SAAUpE,IAAImC,SACTC,WACAmC,QACA1N,MAAM,YACXwN,SAAUrE,IAAImC,SACTC,WACAE,IAAI,GACJzL,MAAM,YACXuE,KAAM4E,IAAImC,SACLC,WACAvL,MAAM,WAGfwK,8BAAW,SAAArF,IAAA,IAAA8D,EAAA,OAAA5D,EAAA9F,EAAA+F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGDkI,YAAqB3O,EAAK8F,MAAMnE,MAH/B,OAAA4E,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAMCA,EAAAM,GAAG+H,SAAkC,MAAvBrI,EAAAM,GAAGvC,SAASE,UACpByF,EADoCnK,OAAAC,EAAA,EAAAD,CAAA,GACvBE,EAAK8F,MAAMmE,SAEvBsE,SAAWhI,EAAAM,GAAGvC,SAAS3C,KAC9B3B,EAAK4G,SAAS,CAACqD,YAVhB,wBAAA1D,EAAAO,SAAAX,EAAAxF,KAAA,oFAgBP,OACAL,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAM+M,SAAU5M,KAAK2K,cAChB3K,KAAK6M,YAAY,WAAY,YAC7B7M,KAAK6M,YAAY,WAAY,WAAY,YACzC7M,KAAK6M,YAAY,OAAQ,QACzB7M,KAAK+M,aAAa,qBA3CJ1D,GCmChB6E,iMAtBX,OACAvO,EAAAC,EAAAC,cAACF,EAAAC,EAAMuO,SAAP,KACExO,EAAAC,EAAAC,cAACuO,EAAA,eAAD,MACAzO,EAAAC,EAAAC,cAACwO,GAAD,MACA1O,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAChBH,EAAAC,EAAAC,cAACyO,EAAA,EAAD,KACE3O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAK,YAAYuP,UAAWC,KACnC9O,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAK,SAASuP,UAAWb,KAChChO,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAK,cAAcuP,UAAWlD,IACrC3L,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAK,UAAUuP,UAAWtJ,IACjCvF,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAK,QAAQuP,UAAWxB,IAC/BrN,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAM,WAAWuP,UAAWvB,IACnCtN,EAAAC,EAAAC,cAAC0O,EAAA,EAAD,CAAOtP,KAAK,aAAauP,UAAWE,IACpC/O,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAUC,KAAK,IAAIC,OAAK,EAACvG,GAAG,YAC5B3I,EAAAC,EAAAC,cAAC8O,EAAA,EAAD,CAAUrG,GAAG,yBAhBHhI,cCNEwO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS7C,MACvB,uECPN8C,IAASC,OACTxP,EAAAC,EAAAC,cAACuP,EAAA,EAAD,KACIzP,EAAAC,EAAAC,cAACwP,GAAD,OAEJC,SAASC,eAAe,SD4GlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1H,KAAK,SAAA2H,GACjCA,EAAaC","file":"static/js/main.820ea4c5.chunk.js","sourcesContent":["import React, { Component} from 'react';\n\n//colums:array\n//sortColumn: obj\n//onSort: function\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = { ...this.props.sortColumn };\n            if (sortColumn.path === path)\n                sortColumn.order = sortColumn.order === 'asc' ? 'desc': 'asc';\n            else {\n                sortColumn.path = path;\n                sortColumn.order = 'asc';\n            }\n            this.props.onSort(sortColumn);    \n    };   \n\n    renderSortIcon = column => {\n        const { sortColumn } = this.props;\n\n        if (column.path !== sortColumn.path) return null;\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\n        return <i className=\"fa fa-sort-desc\"></i>\n    };\n    \n    render() {  \n        return (\n        <thead>\n            <tr>\n                {this.props.columns.map(column => (\n                    <th \n                    className='clickable'\n                    key={column.path || column.key} \n                    onClick={() => this.raiseSort(column.path)}\n                    >\n                    {column.label} {this.renderSortIcon(column)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n        );\n    }    \n}\n \nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n    renderCell =(item, column) => {\n        if (column.content) return column.content(item);\n\n        return _.get(item, column.path);\n    };\n\n    createKey =(item, column) => {\n        return item._id + (column.path || column.key)\n    }\n     \n\n    render() { \n        //obj destructing, pick all the props we need\n        const {data, columns} =this.props;\n\n        return  (\n            <tbody>\n                {data.map(item => (\n                    <tr key={item._id}>\n                        {columns.map(column => (\n                        <td key={this.createKey(item, column)}>{\n                            this.renderCell(item, column)}\n                        </td>\n                        ))}  \n                    </tr>\n            ))}\n            </tbody>  \n        );\n    }\n}\n \nexport default TableBody;\n\n//in td we want to render a prop of thid current item, so we get item wh/ is our\n//current obj,use [] to access a property dynamically, that prop is column.path\n//**only works for SIMPLE PROPS , if ur dealing w/nested PROPS WONT WORK*/\n\n//have to use loash _.get)item, column.path","import React, { Component } from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from './tableBody';\n\nconst Table = ({ columns, sortColumn, onSort, data}) => {\n    //obj destruc\n    return (          \n    <table className=\"table\">\n        <TableHeader \n            columns={columns} \n            sortColumn={sortColumn}     \n            onSort={onSort}\n        />\n    <TableBody columns={columns} data={data } />\n    </table>\n    );\n}\n \nexport default Table;","import React, { Component } from 'react';\n\n //Input: liked: booleanT/F\n //Output: onClick\n\n const Like = (props ) => {\n    let classes = \"fa fa-heart\";\n    if (!props.liked) classes += \"-o\";\n    //we should handle the onClick event of the DOM element +raise \n    //a custom event wh/also happens to be called onClick\n    //these 2 events are DIFFERENT \n    //     we're responding to the cleck of DOM elements, we are raising another\n                                    //custom event called onClick\n    return (\n            <i \n            onClick={props.onClick} \n            style={{cursor: \"pointer\"}}  \n            className={classes} \n            aria-hidden=\"true\" \n            />\n    );\n}\n \n//when u conver a class to a functional compnent u have to get rid of all the references\n//th this\n \nexport default Like;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport Table from './commom/table';\nimport Like from './commom/like';\n\nclass StocksTable extends Component {\n    columns = [\n        {\n            path: 'name', \n            label: 'Name', \n            //content: stock => <Link to={`/stocks/${stock._id}`}>{stock.title}</Link>\n         },\n        {path: 'sector', label: 'Sector' },\n        {path: 'price', label: 'Price' },\n        {path: 'divYield'  , label: 'DivYield' },\n        {path: 'distDate'  , label: 'DistDate' },\n        {path: 'decDate'  , label: 'DecDate' },\n        {path: 'forward'  , label: '1yr Forward' },\n        {\n            key : 'like', \n            content: stock => \n                //replace w/funct, instaed of setting to react element, takes parameter\n                //stock + returns a react element\n                <Like liked={stock.liked} onClick={() => this.props.onLike(stock)}/>\n        },\n        {\n            key: 'delete', \n            content: stock =>(\n                <button \n                    onClick={() => this.props.onDelete(stock)} \n                    className=\"btn btn-danger btn-sm\"\n                >\n        Delete\n        </button>   \n            )\n        }\n    ];\n    //what we're ref in jsx expr is essentiall a plain js obj, so just like we can\n    //pass any obj to funct or use them as values of props, columnsns array add \n    // anew prop set a jsx expression\n\n    render() { \n        const { stocks, onSort, sortColumn } = this.props; \n\n        return ( \n            <Table \n            columns={this.columns} \n            data={stocks} \n            sortColumn={sortColumn} \n            onSort={onSort} />\n   \n        );  \n    }\n }\n\n  \n export default StocksTable;\n\n //instaed of passing an element pass => that takes a movie\n // content: <Link to=\"/movies\"></Link>, pass {}, inside template literal\n // so string is /movies and $ adds a argument: the movie_id\n //template literal used to dynamically insett values into a string","import React, { Component } from 'react';\n\nconst ListGroup = ({ \n    items, \n    textProperty, \n    valueProperty, \n    selectedItem, \n    onItemSelect \n}) => {\n   \n    return (\n        <ul className=\"list-group\">\n            {items.map(item => (\n                <li \n                    onClick={() => onItemSelect(item)} \n                    key={item[valueProperty]}  \n                    //if this item we are rendering=selected item, return list group item\n                    //class + active class, otherwise return list-group-item\n                    className={ \n                        item === selectedItem ? \"list-group-item active\" : \"list-group-item\"}\n                    \n            >\n                {item[textProperty]}\n            </li>\n        ))}\n        </ul>\n    );\n}\n \nListGroup.defaultProps = {\n    textProperty: 'name',\n    valueProperty: '_id'\n}\n//w/this we no longer have to pass these 2 props when using our list group,\n//this simplifies the interface of r list group\n\nexport default ListGroup;","//starting w/a functional component: not going to have any local state+can pass all\n//yhe data this component needs via props\n//shortcuts:imtr,sfc\n\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n \n\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    //console.log(pagesCount);\n    if (pagesCount ===   1) return null;\n    const pages = _.range(1, pagesCount + 1);\n\n    //[1,2,3].map(  )\n    return (\n    <nav>\n        <ul className=\"pagination\">\n            {pages.map(page=> (\n                <li key={page} className ={ page === currentPage ? 'page-item active' : 'page-item'}>\n                    <a className=\"page-link\" onClick={() => onPageChange(page)}>\n                    {page}\n                    </a>\n                </li>\n            ))}\n        </ul>\n    </nav>  \n    );\n};\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired, \n    pageSize: PropTypes.number.isRequired, \n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n \nexport default Pagination;\n\n//props.onPageChange destrucutre this, drop props and out it in \n//const{itmeCount,..,onPageChange}\n\n\n\n//whenever u want to build a resuable component b4 implementing that you should think abt the tinerfacee\n//what are the iputs the component is going to receive, what are the events its going to raise\n//best way to decide the interface of a compnent is to use it b4 implementing it\n//goto movies.jsx and import it","//import Raven from 'raven-js';\n\nfunction init() {\n//  \n}\n\nfunction log(error) {\n    //Raven.captureException(error)\n    console.error(error);\n}\n\nexport default {\n    init,\n    log\n}","import axios from 'axios'; \nimport logger from './logService';\nimport {toast} from 'react-toastify';\n//axios.interceptors.response.use(success, error)\n//handling unexpected errors globally\naxios.interceptors.response.use(null, error => {\n    const expectedError =\n      error.response && \n      error.response.status >= 400 && \n      error.response.status < 500;\n        \n  if (!expectedError){ \n    logger.log(error);\n    toast.error('An unexpected error occurred.') \n  }\n      return Promise.reject(error);\n  \n    //to pass this to our catch block, we need 2 return a rejected prmoise\n  \n  });\n\n  export default {\n      get: axios.get,\n      post: axios.post,\n      put: axios.post,\n      delete: axios.delete\n  }","import http from'./httpService';\n//import {apiUrl} from '../config.json'\n//genres should be sectors\nexport function getSectors() {\n    //return http.get('http://localhost:3900/api/sector')\n    return http.get(\"/sectors\");\n}\n\n\n//when this works goto stocks.jsx and fix import state!!!!!\n//line 2 is messed up\n\n\n//destructred\n// import http from'./httpService';\n// import {apiUrl} from '../config.json'\n// //genres should be sectors\n// export function getStocks() {\n//     //return http.get('http://localhost:3900/api/sector')\n//     return http.get('aprUrl + \"/sectors');\n// }","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search...\"\n      value={value}\n      onChange={e => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import axios from 'axios';\n\nexport default {\n    //method\n    scrape: query =>{return axios.get('/api/stocks')}\n\n}","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport StocksTable from './stocksTable';\nimport ListGroup from './commom/listGroup';\nimport Pagination from './commom/pagination';\n//use {} because we are dealing w/named exports\n//below is where movie stuf is coming from\nimport { getStocks, deleteStock } from '../services/stockService';\nimport { getSectors } from '../services/sectorService';\nimport { paginate } from '../utils/paginate';\nimport _ from 'lodash';\nimport SearchBox from './searchBox';\nimport stockUtils from '../services/stockUtil';\n\nclass Stocks extends Component {\n    state = { \n        stocks: [],\n        sectors: [],\n        currentPage: 1,\n        pageSize: 22,\n        searchQury: \"\",\n        selectedSector: null,\n        sortColumn: { path: 'title', order: 'asc'  }\n     };\n\n     async componentDidMount () {\n         const {data} = await getSectors();\n         const sectors =[{ _id: \"\", name: \"All Sectors\"}, ...data()]\n    \n         const { data: stocks} = await getStocks();\n         this.setState({ stocks, sectors });\n           \n\n     }\n\n     componentWillMount() {\n         stockUtils.scrape().then(res =>{\n             console.log(res);\n             this.setState({stocks: res.data })\n         })\n        \n     }\n\n     handleDelete = async stock => {\n         const originalStocks = this.state.stocks;\n         const stocks = originalStocks.filter(m =>m._id !== stock._id)\n         this.setState({ stocks });\n\n         try {\n         await delete(stock._id);\n         }\n         catch (ex) {\n             if (ex.response && ex.response.status === 404)\n                toast.error('This stock has already been deleted'); \n\n                this.setState({stocks: originalStocks});\n         }\n     };\n\n     handleLike = stock => {\n        //we dont want to change the state directly, we want to take a copy\n        //+give the new state to the setsState mehtod of our component\n            //cloning movie\n        const stocks = [...this.state.stocks];\n        //here we have an array of objects, so we dont want to modify one of \n        //those objs directly, we want to clone that obj so in this array we need\n        //to find the index of that obj\n        const index = stocks.indexOf(stock);\n        //we goto stocks of index, ser this to a new obj+ here we use spread ooperator    \n        //to clone this obj \n        stocks[index] = {...stocks[index]}\n        //change stocks of index btoggle it, if its t it becomes f otherwise it becomes t\n        stocks[index].liked =!stocks[index].liked\n        //passing the stocks array\n        this.setState({ stocks})\n        //in the future this is where we are going to call the server to persist the changes\n     }\n\n     handlePageChange = page => {\n         this.setState({ currentPage: page });\n         //console.log(page);\n     };\n\n     handleSectorSelect = genre => {\n         this.setState({ selectedGenre: genre, currentPage: 1 });\n     };\n     \n     handleSearch = query => {\n         this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n     };\n\n     handleSort = sortColumn => {\n        this.setState ({ sortColumn });\n        };\n\n    getPagedData =() => {\n        const { \n            pageSize, \n            currentPage, \n            sortColumn,\n            selectedGenre, \n            searchQuery,\n            stocks: allStocks \n        } =this.state; \n\n                //if selected genre is truthy, apply a filter so we get all stocks+filter them\n        //so m goes to m.genr_id should be = selectedGenre._id otherwise return allstocks\n        // const filtered = selectedGenre && selectedGenre._id\n        //     ? allstocks.filter(m => m.genre._id === selectedGenre._id) \n        //     : allstocks;\n \n        let filtered = allStocks;\n        if (searchQuery)\n          filtered = allStocks.filter(m =>\n            m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n          );\n        else if (selectedGenre && selectedGenre._id)\n          filtered = allStocks.filter(m => m.genre._id === selectedGenre._id);\n    \n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n    \n        const stocks = paginate(sorted, currentPage, pageSize);\n\n        return { totalCount: filtered.length, data: stocks };\n    }\n\n    render() { \n        //obj destructuring\n        const { length:count } = this.state.stocks;\n        \n\n        if (count === 0) return <p>There are no stocks in the database.</p>;\n\n        const { totalCount, data: stocks } = this.getPagedData();\n        const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n            return (\n            <div className=\"row\">\n                <div className=\"col-3\">\n                 <ListGroup \n                    items={this.state.sectors} \n                    selectedItem={this.state.selectedSector}\n                    onItemSelect={this.handleSectorSelect}  \n                    />\n                </div>\n                <div className=\"col\">\n                    <Link\n                        to='/stocks/new'\n                        className=\"btn btn-primary\"\n                        style={{ marginButtom: 20}}\n                    >\n                    New Stock\n                    </Link>\n                <p>Showing {totalCount} stocks in the database.</p>\n                {/* //zen coding table.table.thead>tr>th*4*/}\n                <SearchBox value={searchQuery} onChange={this.handlesearch} />\n                <StocksTable \n                    stocks={stocks} \n                    sortColumn={sortColumn}\n                    onLike={this.handleLike} \n                    onDelete={this.handleDelete}\n                    onSort={this.handleSort}\n                   />\n                <Pagination \n                    itemsCount={totalCount} \n                    pageSize={pageSize}\n                    currentPage={currentPage} \n                    onPageChange={this.handlePageChange} />\n                </div>       \n                \n            </div>\n        );\n    }\n}\n\n \nexport default Stocks;\n\n//**we used obj destructing method earlier, extracted length property to count\n// so {this.state.stocks.length} can be simplified to count\n//pages size will be used in multiple paces so its better to store it state\n\n//every react component has a property called props wh/ are plain js obj, th inc all the attributes\n//that we set in component\n\n//state is data that is local or private to that component so other compnents cant \n//access that state, its completely internal to th/component\n//props is read only we cannot change the input 2 this componet inside of the component\n\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber -1) * pageSize;\n    return _(items)\n        .slice(startIndex)\n        .take(pageSize)\n        .value();\n    }\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input {...rest} name={name} id={name} className=\"form-control\" />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map(option => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from 'react';\nimport Joi from 'joi-browser';   \nimport  Input from './input';\nimport Select from './select';\n\n\nclass Form extends Component {\n    state = { \n        data: {},\n        errors: {}   \n     };\n\n     validate = () => {\n        const options = { abortEarly: false };\n        //destruc result.error\n        const {error} = Joi.validate(this.state.data, this.schema, options);\n        if (!error) return null;\n\n        const errors = {};\n        //maps an array into an obj\n        for (let item of error.details)\n            errors[item.path[0]] = item.message\n        return errors;\n    };\n\n    validateProperty = ({ name, value }) => {\n        //const obj = { username: value }; es6 dont want to hardcode name here\n        //whatever name is @ runtim, it will set the key\n        const obj = { [name]: value };\n        const schema = { [name]: this.schema[name]};\n        const {error} = Joi.validate(obj, schema);\n        return error ? error.details[0].message : null;\n        //used ternnary conditional operator above: ?if :otherwise\n        //return error.details[0].message  \n    }; \n\n    handleSubmit =  e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        //if u dont have errors above will be null state was null wh/got a run time error\n        //set error property to error obj OR an empty obj, errors prop should always\n        //be st to an obj never to null\n        console.log(errors);\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n\n        this.doSubmit()\n    }; \n\n    handleChange = ({ currentTarget: input }) => {\n        //need to update this state,1st clone errors property of our state obj\n        const errors = {...this.state.errors};   \n        const errorMessage =this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data ={...this.state.data};\n        //returns our input filed and we get the va;ue property\n        //data[e.currentTarget.name]= e.currentTarget.value;\n        data[input.name]= input.value\n        this.setState({ data, errors});\n    }; \n\n    renderButton(label) {\n        return (\n            <button \n                disabled={this.validate()} \n                className=\"btn btn-primary\">\n                    {label}\n            </button>\n        );\n    }\n\n    renderSelect(name, label, options) {\n        const { data, errors } = this.state;\n    \n        return (\n          <Select\n            name={name}\n            value={data[name]}\n            label={label}\n            options={options}\n            onChange={this.handleChange}\n            error={errors[name]}\n          />\n        );\n      }\n\n    renderInput(name, label, type = 'text') {\n        //obj destruct\n        const { data, errors } =this.state;\n\n         return (\n           <Input \n                type={type}\n                name={name}\n                value={data[name]}\n                label={label}\n                onChange={this.handleChange}\n                //tried to access username property of null> handleSubmit\n                error={errors[name]}\n                />\n        );\n\n    }\n }\n    \nexport default Form;","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './commom/form';\nimport { getStock, saveStock } from '../services/stockService';\nimport { getSectors } from '../services/sectorService'; \n//import StockForm from './stockForm';\n\nclass StockForm extends  Form{\n    state=  {\n        data: {\n            title: \"\",\n            genreId: \"\",\n            numberInStock: \"\",\n            dailyRentalRate: \"\"\n        },\n        genres: [],\n        errors: {}\n    };\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string()\n            .required()\n            .label(\"Title\"),\n        genreId: Joi.string()\n            .required()\n            .label(\"Genre\"),\n        numberInStock: Joi.number()\n            .required()\n            .min(0)\n            .max(100)\n            .label(\"Number In Stock\"),\n        dailyRentalRate: Joi.number()\n            .required()\n            .min(0)\n            .max(0)\n            .label(\"Daily Rental Rate\")\n    };\n\n    async populateSectors() {\n        const {data : sectors} =   getSectors();\n        this.setState({ sectors });\n    }\n\n    async populateStock() {\n        try {\n            const stockId = this.props.match.params.id;\n            if (stockId === \"new\") return;\n\n            const {data: stock} = await getStock(stockId);\n            this.setState({ data: this.mapToViewModel(stock) })\n        } catch (ex) {\n            if (ex.response && ex.response.status === 404)\n                this.props.history.replace(\"/not-found\");\n        }\n    }\n    async componentDidMount() {\n        await this.populateSectors();\n        await this.populateStock();\n    }\n\n    mapToViewModel(stock) {\n        return{\n            _id: stock._id,\n            title: stock.title,\n            genreId: stock.genre._id,\n            numberInStock: stock.numberInStock,\n            dailyRentalRate: stock.dailyRentalRate\n        };\n    }\n  \n    doSubmit = async () => {\n        await saveStock(this.state.data);\n\n        this.props.history.push(\"/stocks\");\n};\n\n//destructure props+wrap the match property\nrender() {\n    return (\n      <div>\n        <h1>stock Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"title\", \"Title\")}\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n          {this.renderButton(\"Save\")}\n        </form>\n      </div>\n    );\n  }\n}\n\n \nexport default StockForm;","  import React from 'react';\n\n  const News = () => {\n      return <h1>News</h1>\n  }\n   \n  export default News;","import React from 'react';\n\nconst Rentals = () => {\n    return <h1>Rentals</h1>\n}\n \nexport default Rentals;\n\n","import React from 'react';\n\nconst notFound = () => {\n    return <h1>NotFound</h1>\n}\n \nexport default notFound;","import React from \"react\";\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link class=\"navbar-brand\" to=\"/\">\n        Tasi\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          <NavLink className=\"nav-item nav-link\" to=\"/stocks\">\n            Stocks <span className=\"sr-only\">(current)</span>\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/news\">\n            News\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/rentals\">\n            Rentals\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/register\">\n            Register\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, {Component} from 'react';\nimport Joi from 'joi-browser';\nimport Form from './commom/form';\n\n//if u need to access a dom element, in component have to define a propert;  username = React.createRef\n//creates a re\n\nclass LoginForm extends Form { \n    state = {\n        data: { username: '', password: ''},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string()\n            .required()\n            .label('UserName'),\n        password: Joi.string()\n            .required()\n            .label('Password')\n    }; \n\n    doSubmit = () => {\n         //call the server\n        console.log('submitted');\n    }\n \n    render() {  \n        return (\n        <div>\n            <h1>Login</h1>\n            <form onSubmit={this.handleSubmit}>  \n                {this.renderInput(\"username\", \"Username\")}\n                {this.renderInput(\"password\", \"Password\", \"password\")}\n                {this.renderButton(\"Login\")}     \n            </form>     \n        </div>\n        );\n    }\n}\n \nexport default LoginForm;\n\n//if we want to work w/properties of obj dynamically instead of. use []\n\n//next time we use all we have 2 do is initialize state+set schema for that form\n//deter what should hapen whne the form is submitted+ dedide what to render?return\n//when form is submitted"," import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './commom/form';\nimport * as userService from '../services/userService';\n\nclass RegistrationForm extends Form {\n    state = {\n        data: { username: '', password: ''},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string()\n            .required()\n            .email()\n            .label('UserName'),\n        password: Joi.string()\n            .required()\n            .min(5)\n            .label('Password'),\n        name: Joi.string()\n            .required()\n            .label('Name')\n    };\n\n    doSubmit = async () => {\n        //call the server\n        try {\n        await userService.register(this.state.data);\n        }\n        catch (ex) {\n            if (ex.reponse && ex.response.status === 400) {\n                const errors = {...this.state.errors}\n                //use the error message we get from the server\n                errors.username = ex.response.data;\n                this.setState({errors});\n            }\n        }\n   };\n    \n    render() { \n        return ( \n        <div>\n            <h1>Register</h1>\n            <form onSubmit={this.handleSubmit}>  \n                {this.renderInput(\"username\", \"Username\")}\n                {this.renderInput(\"password\", \"Password\", \"password\")}\n                {this.renderInput(\"name\", \"Name\")}\n                {this.renderButton(\"Register\")}     \n            </form>     \n        </div>\n        );\n    }\n}\n \nexport default RegistrationForm;\n\n","import React, { Component } from 'react'; \nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport {ToastContainer} from 'react-toastify'\nimport Stocks from './components/stocks';\nimport StockForm from './components/stockForm';\nimport News from './components/news'\nimport Rentals from './components/rentals'\nimport NotFound from './components/notFound';\nimport NavBar from './components/navBar';\nimport LoginForm from './components/loginForm'\nimport RegisterForm from './components/registerForm'\nimport 'react-toastify/dist/ReactToastify.css';\n//import http from './services/httpService'; \nimport './App.css';\n\n\nclass App extends Component {\n  render() {\n    return (\n    <React.Fragment> \n      <ToastContainer />  \n      <NavBar />\n      <main className=\"container\">\n      <Switch>\n        <Route path=\"/register\" component={RegisterForm} />\n        <Route path=\"/login\" component={LoginForm} />\n        <Route path=\"/stocks/:id\" component={StockForm} />\n        <Route path=\"/stocks\" component={Stocks} />\n        <Route path=\"/news\" component={News}></Route>\n        <Route path= \"/rentals\" component={Rentals}></Route>\n        <Route path=\"/not-found\" component={NotFound}></Route>\n        <Redirect from=\"/\" exact to=\"/stocks\" />\n        <Redirect to=\"/not-found\" />\n      </Switch>\n      </main>\n    </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nReactDOM.render(\n<BrowserRouter>\n    <App />\n</BrowserRouter>, \ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n\n//Browser adds routing ;\n"],"sourceRoot":""}